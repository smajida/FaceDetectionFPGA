--lpm_mult CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone IV E" DSP_BLOCK_BALANCING="Auto" LPM_REPRESENTATION="SIGNED" LPM_WIDTHA=22 LPM_WIDTHB=5 LPM_WIDTHP=27 MAXIMIZE_SPEED=5 dataa datab result CARRY_CHAIN="MANUAL" CARRY_CHAIN_LENGTH=48
--VERSION_BEGIN 14.1 cbx_cycloneii 2014:12:03:18:04:04:SJ cbx_lpm_add_sub 2014:12:03:18:04:04:SJ cbx_lpm_mult 2014:12:03:18:04:04:SJ cbx_mgl 2014:12:03:18:06:09:SJ cbx_padd 2014:12:03:18:04:04:SJ cbx_stratix 2014:12:03:18:04:04:SJ cbx_stratixii 2014:12:03:18:04:04:SJ cbx_util_mgl 2014:12:03:18:04:04:SJ  VERSION_END


-- Copyright (C) 1991-2014 Altera Corporation. All rights reserved.
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, the Altera Quartus II License Agreement,
--  the Altera MegaCore Function License Agreement, or other 
--  applicable license agreement, including, without limitation, 
--  that your use is for the sole purpose of programming logic 
--  devices manufactured by Altera and sold by Altera or its 
--  authorized distributors.  Please refer to the applicable 
--  agreement for further details.


FUNCTION cycloneive_mac_mult (aclr, clk, dataa[dataa_width-1..0], datab[datab_width-1..0], ena, signa, signb)
WITH ( dataa_clock, dataa_width, datab_clock, datab_width, signa_clock, signb_clock)
RETURNS ( dataout[dataa_width+datab_width-1..0]);
FUNCTION cycloneive_mac_out (aclr, clk, dataa[dataa_width-1..0], ena)
WITH ( dataa_width = 0, output_clock)
RETURNS ( dataout[dataa_width-1..0]);
FUNCTION soft (in)
RETURNS ( out);

--synthesis_resources = dsp_9bit 3 lut 15 
SUBDESIGN mult_47n
( 
	dataa[21..0]	:	input;
	datab[4..0]	:	input;
	result[26..0]	:	output;
) 
VARIABLE
	add5_result[9..0]	:	WIRE;
	add9_result[4..0]	:	WIRE;
	mac_mult1 : cycloneive_mac_mult
		WITH (
			dataa_clock = "none",
			dataa_width = 18,
			datab_clock = "none",
			datab_width = 5,
			signa_clock = "none",
			signb_clock = "none"
		);
	mac_mult3 : cycloneive_mac_mult
		WITH (
			dataa_clock = "none",
			dataa_width = 4,
			datab_clock = "none",
			datab_width = 5,
			signa_clock = "none",
			signb_clock = "none"
		);
	mac_out2 : cycloneive_mac_out
		WITH (
			dataa_width = 23,
			output_clock = "none"
		);
	mac_out4 : cycloneive_mac_out
		WITH (
			dataa_width = 9,
			output_clock = "none"
		);
	sft10a[4..0] : soft;
	sft11a[4..0] : soft;
	sft12a[4..0] : soft;
	sft6a[9..0] : soft;
	sft7a[9..0] : soft;
	sft8a[9..0] : soft;
	w146w[27..0]	: WIRE;
	w77w	: WIRE;
	w84w	: WIRE;

BEGIN 
	add5_result[] = sft6a[].out + sft7a[].out;
	add9_result[] = sft10a[].out + sft11a[].out;
	mac_mult1.dataa[] = ( dataa[17..0]);
	mac_mult1.datab[] = ( datab[4..0]);
	mac_mult1.signa = B"0";
	mac_mult1.signb = B"1";
	mac_mult3.dataa[] = ( dataa[21..18]);
	mac_mult3.datab[] = ( datab[4..0]);
	mac_mult3.signa = B"1";
	mac_mult3.signb = B"1";
	mac_out2.dataa[] = mac_mult1.dataout[];
	mac_out4.dataa[] = mac_mult3.dataout[];
	sft10a[].in = ( w84w, ( mac_out4.dataout[7..7], ( mac_out4.dataout[6..6], ( mac_out4.dataout[5..5], w77w))));
	sft11a[].in = ( w84w, ( w84w, ( w84w, ( w84w, mac_out4.dataout[4..4]))));
	sft12a[].in = add9_result[];
	sft6a[].in = ( w77w, ( (! mac_out4.dataout[8..8]), ( w77w, ( w77w, ( w77w, ( (! mac_out2.dataout[22..22]), ( mac_out2.dataout[21..21], ( mac_out2.dataout[20..20], ( mac_out2.dataout[19..18])))))))));
	sft7a[].in = ( w84w, ( sft12a[4..4].out, ( sft12a[3..3].out, ( sft12a[2..2].out, ( sft12a[1..1].out, ( sft12a[0..0].out, ( mac_out4.dataout[3..3], ( mac_out4.dataout[2..2], ( mac_out4.dataout[1..0])))))))));
	sft8a[].in = add5_result[];
	result[26..0] = w146w[26..0];
	w146w[] = ( sft8a[9..8].out, sft8a[7..6].out, sft8a[5..4].out, sft8a[3..2].out, sft8a[1..0].out, mac_out2.dataout[17..17], mac_out2.dataout[16..16], mac_out2.dataout[15..15], mac_out2.dataout[14..14], mac_out2.dataout[13..13], mac_out2.dataout[12..12], mac_out2.dataout[11..11], mac_out2.dataout[10..10], mac_out2.dataout[9..9], mac_out2.dataout[8..8], mac_out2.dataout[7..7], mac_out2.dataout[6..6], mac_out2.dataout[5..5], mac_out2.dataout[4..4], mac_out2.dataout[3..3], mac_out2.dataout[2..2], mac_out2.dataout[1..1], mac_out2.dataout[0..0]);
	w77w = B"1";
	w84w = B"0";
END;
--VALID FILE
