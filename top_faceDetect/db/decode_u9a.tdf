--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone IV E" LPM_DECODES=10 LPM_WIDTH=4 data eq
--VERSION_BEGIN 14.1 cbx_cycloneii 2014:12:03:18:04:04:SJ cbx_lpm_add_sub 2014:12:03:18:04:04:SJ cbx_lpm_compare 2014:12:03:18:04:04:SJ cbx_lpm_decode 2014:12:03:18:04:04:SJ cbx_mgl 2014:12:03:18:06:09:SJ cbx_stratix 2014:12:03:18:04:04:SJ cbx_stratixii 2014:12:03:18:04:04:SJ  VERSION_END


-- Copyright (C) 1991-2014 Altera Corporation. All rights reserved.
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, the Altera Quartus II License Agreement,
--  the Altera MegaCore Function License Agreement, or other 
--  applicable license agreement, including, without limitation, 
--  that your use is for the sole purpose of programming logic 
--  devices manufactured by Altera and sold by Altera or its 
--  authorized distributors.  Please refer to the applicable 
--  agreement for further details.



--synthesis_resources = lut 16 
SUBDESIGN decode_u9a
( 
	data[3..0]	:	input;
	eq[9..0]	:	output;
) 
VARIABLE 
	data_wire[2..0]	: WIRE;
	enable_wire1	: WIRE;
	enable_wire2	: WIRE;
	eq_node[9..0]	: WIRE;
	eq_wire1w[7..0]	: WIRE;
	eq_wire2w[7..0]	: WIRE;
	w_anode1030w[3..0]	: WIRE;
	w_anode1047w[3..0]	: WIRE;
	w_anode1057w[3..0]	: WIRE;
	w_anode1067w[3..0]	: WIRE;
	w_anode1077w[3..0]	: WIRE;
	w_anode1087w[3..0]	: WIRE;
	w_anode1097w[3..0]	: WIRE;
	w_anode1107w[3..0]	: WIRE;
	w_anode1117w[3..0]	: WIRE;
	w_anode1128w[3..0]	: WIRE;
	w_anode1138w[3..0]	: WIRE;
	w_anode1148w[3..0]	: WIRE;
	w_anode1158w[3..0]	: WIRE;
	w_anode1168w[3..0]	: WIRE;
	w_anode1178w[3..0]	: WIRE;
	w_anode1188w[3..0]	: WIRE;

BEGIN 
	data_wire[2..0] = data[2..0];
	enable_wire1 = (! data[3..3]);
	enable_wire2 = data[3..3];
	eq[] = eq_node[];
	eq_node[] = ( eq_wire2w[1..0], eq_wire1w[]);
	eq_wire1w[] = ( w_anode1107w[3..3], w_anode1097w[3..3], w_anode1087w[3..3], w_anode1077w[3..3], w_anode1067w[3..3], w_anode1057w[3..3], w_anode1047w[3..3], w_anode1030w[3..3]);
	eq_wire2w[] = ( w_anode1188w[3..3], w_anode1178w[3..3], w_anode1168w[3..3], w_anode1158w[3..3], w_anode1148w[3..3], w_anode1138w[3..3], w_anode1128w[3..3], w_anode1117w[3..3]);
	w_anode1030w[] = ( (w_anode1030w[2..2] & (! data_wire[2..2])), (w_anode1030w[1..1] & (! data_wire[1..1])), (w_anode1030w[0..0] & (! data_wire[0..0])), enable_wire1);
	w_anode1047w[] = ( (w_anode1047w[2..2] & (! data_wire[2..2])), (w_anode1047w[1..1] & (! data_wire[1..1])), (w_anode1047w[0..0] & data_wire[0..0]), enable_wire1);
	w_anode1057w[] = ( (w_anode1057w[2..2] & (! data_wire[2..2])), (w_anode1057w[1..1] & data_wire[1..1]), (w_anode1057w[0..0] & (! data_wire[0..0])), enable_wire1);
	w_anode1067w[] = ( (w_anode1067w[2..2] & (! data_wire[2..2])), (w_anode1067w[1..1] & data_wire[1..1]), (w_anode1067w[0..0] & data_wire[0..0]), enable_wire1);
	w_anode1077w[] = ( (w_anode1077w[2..2] & data_wire[2..2]), (w_anode1077w[1..1] & (! data_wire[1..1])), (w_anode1077w[0..0] & (! data_wire[0..0])), enable_wire1);
	w_anode1087w[] = ( (w_anode1087w[2..2] & data_wire[2..2]), (w_anode1087w[1..1] & (! data_wire[1..1])), (w_anode1087w[0..0] & data_wire[0..0]), enable_wire1);
	w_anode1097w[] = ( (w_anode1097w[2..2] & data_wire[2..2]), (w_anode1097w[1..1] & data_wire[1..1]), (w_anode1097w[0..0] & (! data_wire[0..0])), enable_wire1);
	w_anode1107w[] = ( (w_anode1107w[2..2] & data_wire[2..2]), (w_anode1107w[1..1] & data_wire[1..1]), (w_anode1107w[0..0] & data_wire[0..0]), enable_wire1);
	w_anode1117w[] = ( (w_anode1117w[2..2] & (! data_wire[2..2])), (w_anode1117w[1..1] & (! data_wire[1..1])), (w_anode1117w[0..0] & (! data_wire[0..0])), enable_wire2);
	w_anode1128w[] = ( (w_anode1128w[2..2] & (! data_wire[2..2])), (w_anode1128w[1..1] & (! data_wire[1..1])), (w_anode1128w[0..0] & data_wire[0..0]), enable_wire2);
	w_anode1138w[] = ( (w_anode1138w[2..2] & (! data_wire[2..2])), (w_anode1138w[1..1] & data_wire[1..1]), (w_anode1138w[0..0] & (! data_wire[0..0])), enable_wire2);
	w_anode1148w[] = ( (w_anode1148w[2..2] & (! data_wire[2..2])), (w_anode1148w[1..1] & data_wire[1..1]), (w_anode1148w[0..0] & data_wire[0..0]), enable_wire2);
	w_anode1158w[] = ( (w_anode1158w[2..2] & data_wire[2..2]), (w_anode1158w[1..1] & (! data_wire[1..1])), (w_anode1158w[0..0] & (! data_wire[0..0])), enable_wire2);
	w_anode1168w[] = ( (w_anode1168w[2..2] & data_wire[2..2]), (w_anode1168w[1..1] & (! data_wire[1..1])), (w_anode1168w[0..0] & data_wire[0..0]), enable_wire2);
	w_anode1178w[] = ( (w_anode1178w[2..2] & data_wire[2..2]), (w_anode1178w[1..1] & data_wire[1..1]), (w_anode1178w[0..0] & (! data_wire[0..0])), enable_wire2);
	w_anode1188w[] = ( (w_anode1188w[2..2] & data_wire[2..2]), (w_anode1188w[1..1] & data_wire[1..1]), (w_anode1188w[0..0] & data_wire[0..0]), enable_wire2);
END;
--VALID FILE
